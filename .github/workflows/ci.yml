name: CI - Build and Push Docker Images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  # Your Docker Hub username. Set this in GitHub secrets.
  DOCKER_HUB_USERNAME: bishal2469
  # Environment variables for Turborepo Remote Caching
  # Set these in GitHub secrets after running `npx turbo link`
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_API: https://api.vercel.com

jobs:
  # ==================================================================
  # Job 1: Lint and Test all services
  # Leverages Remote Caching to be extremely fast on subsequent runs.
  # ==================================================================
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true

      - name: Install dependencies
        run: pnpm install

      # - name: Run Linting
      #   run: pnpm turbo run lint 

      # - name: Run Tests
      #   # Turbo will use the remote cache and only test changed packages
      #   run: pnpm turbo run test

  # ==================================================================
  # Job 2: Determine which services have changed
  # This job asks Turborepo what has been affected by the latest commits
  # and creates a JSON matrix for the next job to use.
  # ==================================================================
  determine-changes:
    name: Determine Changed Services
    runs-on: ubuntu-latest
    needs: lint-and-test
    # Only run this job on a push to the main branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      has-changes: ${{ steps.set-matrix.outputs.has-changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # We need to fetch more than the latest commit to compare against main
          fetch-depth: 0

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Install jq
        run: sudo apt-get -y install jq

      - name: Identify affected services
        id: set-matrix
        run: |
          # Get the previous commit for comparison
          if [ "${{ github.event_name }}" = "push" ]; then
            BASE_SHA="${{ github.event.before }}"
            HEAD_SHA="${{ github.sha }}"
          else
            BASE_SHA="origin/${{ github.event.pull_request.base.ref }}"
            HEAD_SHA="${{ github.sha }}"
          fi

          echo "Comparing $BASE_SHA...$HEAD_SHA"

          BUILDABLE_SERVICES=("api-gateway" "cart-service" "order-service" "payment-service" "product-service" "user-service")

          echo "Buildable services: ${BUILDABLE_SERVICES[*]}"

          # Check which services have changes
          AFFECTED_SERVICES=()
          for service in "${BUILDABLE_SERVICES[@]}"; do
            # Check if there are changes in the service directory
            if git diff --name-only "$BASE_SHA" "$HEAD_SHA" | grep -q "^apps/$service/"; then
              echo "✓ Changes detected in $service"
              AFFECTED_SERVICES+=("$service")
            else
              echo "✗ No changes in $service"
            fi
          done

          # Convert to JSON array and always output a valid JSON structure
          if [ ${#AFFECTED_SERVICES[@]} -eq 0 ]; then
            echo "No affected services found"
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "matrix={\"service\":[]}" >> $GITHUB_OUTPUT
          else
            echo "Affected services: ${AFFECTED_SERVICES[*]}"
            echo "has-changes=true" >> $GITHUB_OUTPUT
            
            # Build JSON array manually for better reliability
            SERVICES_JSON="["
            for i in "${!AFFECTED_SERVICES[@]}"; do
              if [ $i -gt 0 ]; then
                SERVICES_JSON+=","
              fi
              SERVICES_JSON+="\"${AFFECTED_SERVICES[$i]}\""
            done
            SERVICES_JSON+="]"
            
            MATRIX_JSON="{\"service\":$SERVICES_JSON}"
            echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT
            
            # Debug output
            echo "Services JSON: $SERVICES_JSON"
            echo "Final matrix output: $MATRIX_JSON"
          fi

  # ==================================================================
  # Job 3: Build and Push Docker images for CHANGED services
  # This job uses the dynamic matrix from the previous job.
  # ==================================================================
  build-and-push-images:
    name: Build and Push Docker Images
    needs: determine-changes
    # Only run if there are changes to build AND we're on main branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.determine-changes.outputs.has-changes == 'true'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      # Use the JSON matrix generated in the 'determine-changes' job
      matrix: ${{ fromJson(needs.determine-changes.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract short SHA
        id: vars
        run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Setup PNPM (for Node.js services)
        uses: pnpm/action-setup@v4
        
      - name: Setup Node.js (for Node.js services)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ${{ env.DOCKER_HUB_USERNAME }}/${{ matrix.service }}:latest
            ${{ env.DOCKER_HUB_USERNAME }}/${{ matrix.service }}:${{ steps.vars.outputs.short_sha }}
          file: ./apps/${{ matrix.service }}/Dockerfile

  build-and-push-seeder:
    name: Build and Push Seeder Image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract short SHA
        id: vars
        run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/product-service/seeder
          push: true
          tags: |
            ${{ env.DOCKER_HUB_USERNAME }}/product-service-seeder:latest
            ${{ env.DOCKER_HUB_USERNAME }}/product-service-seeder:${{ steps.vars.outputs.short_sha }}