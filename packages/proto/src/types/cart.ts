// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               v5.29.3
// source: cart.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "cart";

export interface Cart {
  userId: string;
  items: CartItems[];
}

export interface CartItems {
  productId: string;
  quantity: number;
}

export interface CartReq {
  userId: string;
}

export interface CartRes {
  userId: string;
  items: CartItems[];
}

export interface AddItemReq {
  userId: string;
  productId: string;
  quantity: number;
}

export interface AddItemRes {
  msg: string;
}

export interface ClearCartReq {
  userId: string;
}

export interface ClearCartRes {
  msg: string;
}

export const CART_PACKAGE_NAME = "cart";

export interface CartServiceClient {
  getCart(request: CartReq): Observable<CartRes>;

  addItem(request: AddItemReq): Observable<AddItemRes>;

  clearCart(request: ClearCartReq): Observable<ClearCartRes>;
}

export interface CartServiceController {
  getCart(request: CartReq): Promise<CartRes> | Observable<CartRes> | CartRes;

  addItem(request: AddItemReq): Promise<AddItemRes> | Observable<AddItemRes> | AddItemRes;

  clearCart(request: ClearCartReq): Promise<ClearCartRes> | Observable<ClearCartRes> | ClearCartRes;
}

export function CartServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getCart", "addItem", "clearCart"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("CartService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("CartService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const CART_SERVICE_NAME = "CartService";
